(()=>{var t={162:t=>{t.exports={clamp:function(t,e,s){return t<e?e:t>s?s:t},isObjectEmpty:function(t){return"{}"===JSON.stringify(t)},getRandom:function(t){return Math.floor(Math.random()*t+1)}}}},e={};function s(i){var n=e[i];if(void 0!==n)return n.exports;var r=e[i]={exports:{}};return t[i](r,r.exports,s),r.exports}(()=>{"use strict";const t=class{constructor(t=null,e=null,s=null){this.data=t,this.left=e,this.right=s,this.x=0,this.y=0}},e={constants:{MAX_NODES:2e3,MAX_N:9999,CANVAS_WIDTH:.9*window.innerWidth,CANVAS_HEIGHT:700,CANVAS_COLOR:"black",NODE_RADIUS:22,SCALE_X:28,SCALE_Y:70,OFFSET_Y:50,TEXT_OFFSET:5,MAX_RADIAN:2*Math.PI,WORLD_PADDING:50,FPS:60,BORDER_COLOR:"white",NODE_COLOR:"green",DATA_COLOR:"white",DATA_FONT:"12px Arial",STAT_FONT:"15px Arial bold",STAT_COLOR:"orange",STAT_X:50}};const i=class{constructor(t){this.root=null,this.clearRecords(),this.state={},t&&this.build(t)}#t(t){const e=t.filter(((e,s)=>t.indexOf(e)===s));return e.sort(((t,e)=>t-e)),e}#e(e,s=0,i=e.length-1){if(s>i)return null;const n=Math.floor((s+i)/2),r=new t(e[n]);return r.left=this.#e(e,s,n-1),r.right=this.#e(e,n+1,i),r}assignNodePositions(){let t=0;!function s(i,n){null!==i&&(s(i.left,n+1),i.x=t++*e.constants.SCALE_X,i.y=n*e.constants.SCALE_Y,s(i.right,n+1))}(this.root,0)}getLeftMost(t){return null===t.left?t:this.getLeftMost(t.left)}getRightMost(t){return null===t.right?t:this.getRightMost(t.right)}updateBoundingBox(){const t=this.getLeftMost(this.root),s=this.getRightMost(this.root),i=this.root;let n;this.inOrder((t=>{this.depth(t)===this.height()&&(n=t)})),this.state.boundingBox={},this.state.boundingBox.x=t.x-e.constants.NODE_RADIUS,this.state.boundingBox.y=i.y-e.constants.NODE_RADIUS,this.state.boundingBox.w=s.x+e.constants.NODE_RADIUS,this.state.boundingBox.h=n.y+e.constants.NODE_RADIUS,this.state.boundingBox.area=(this.state.boundingBox.w-this.state.boundingBox.x)*(this.state.boundingBox.h-this.state.boundingBox.y)}calculateNodesAndEdges(t=this.root,s={nodes:[],edges:[]},i={x:this.root.x,y:3*-e.constants.NODE_RADIUS}){if(null!==t)return s.nodes.push(Object.assign({},t)),s.edges.push({x1:t.x,y1:t.y,x2:i.x,y2:i.y}),t.left&&this.calculateNodesAndEdges(t.left,s,t),t.right&&this.calculateNodesAndEdges(t.right,s,t),s}updateTreeSettings(){null!==this.root&&(this.assignNodePositions(),this.updateBoundingBox(),this.state.positions=this.calculateNodesAndEdges(),this.state.rootPosition={x:this.root.x,y:this.root.y},this.state.balanced=this.balanced(),this.state.height=this.height(),this.state.length=this.length)}build(t){t=this.#t(t),this.root=this.#e(t),this.updateTreeSettings()}clearRecords(){this.recordStack=[]}clear(){this.root=null,this.state={},this.clearRecords()}#s(e,s){return null===s?s=new t(e):(this.recordStack.push(s.data),e<s.data?s.left=this.#s(e,s.left):e>s.data&&(s.right=this.#s(e,s.right)),s)}insert(t){null===this.root&&this.build([t]),this.#s(t,this.root),this.updateTreeSettings()}#i(t,e){return e&&this.recordStack.push(e.data),null===e||t===e.data?e:t<e.data?this.#i(t,e.left):this.#i(t,e.right)}find(t){return this.updateTreeSettings(),this.#i(t,this.root)}#n(t,e){if(null===e)return e;if(this.recordStack.push(e.data),t<e.data)e.left=this.#n(t,e.left);else if(t>e.data)e.right=this.#n(t,e.right);else{if(null===e.left&&null===e.right)return null;if(null===e.left)return e.right;if(null===e.right)return e.left;let t=e.right;for(;t.left;)t=t.left;e.data=t.data,e.right=this.#n(t.data,e.right)}return e}delete(t){this.root=this.#n(t,this.root),null===this.root&&this.clear(),this.updateTreeSettings()}#r(t,e,s=[]){if(0===e.length)return;const i=e.shift();return t&&t(i),s.push(i.data),i.left&&e.push(i.left),i.right&&e.push(i.right),this.#r(t,e,s),s}levelOrder(t){const e=[this.root];return this.#r(t,e)}#a(t,e,s=[]){if(null!==e)return this.#a(t,e.left,s),t&&t(e),s.push(e.data),this.#a(t,e.right,s),s}inOrder(t){return this.#a(t,this.root)}recordTraversal(t){if(this.root){switch(t){case"level":this.recordStack=this.levelOrder();break;case"in":this.recordStack=this.inOrder();break;case"pre":this.recordStack=this.preOrder();break;case"post":this.recordStack=this.postOrder()}this.updateTreeSettings()}}#o(t,e,s=[]){return null===e?s:(t&&t(e),s.push(e.data),s=this.#o(t,e.left,s),s=this.#o(t,e.right,s))}preOrder(t){return this.#o(t,this.root)}#h(t,e,s=[]){return null==e||(s=this.#h(t,e.left,s),s=this.#h(t,e.right,s),t&&t(e),s.push(e.data)),s}postOrder(t){return this.#h(t,this.root)}height(t=this.root){if(null===t)return-1;let e=this.height(t.left),s=this.height(t.right);return Math.max(e,s)+1}#d(t=this.root.data,e=this.root,s=0){if(null===e)return-1;if(e.data===t)return s;const i=this.#d(t,e.left,s+1),n=this.#d(t,e.right,s+1);return Math.max(i,n)}depth(e){return e instanceof t?this.#d(e.data):this.#d(e)}balanced(){const t=this.height(this.root.left),e=this.height(this.root.right);return!(Math.abs(t-e)>1)}get length(){return this.inOrder()?this.inOrder().length:0}rebalance(){if(null===this.root||this.balanced())return;const t=this.inOrder();this.root=this.#e(t),this.updateTreeSettings()}},n=(()=>{let t=[];const s=document.querySelector("#canvas"),i=document.querySelector(".controls-container"),n=document.querySelector(".create-btn"),r=document.querySelector("#array-input"),a=document.querySelector(".insert-btn"),o=document.querySelector("#insert-input"),d=document.querySelector(".find-btn"),c=document.querySelector("#find-input"),l=document.querySelector(".delete-btn"),u=document.querySelector("#delete-input"),g=document.querySelector(".random-btn"),f=document.querySelector("#random-input"),x=document.querySelector(".recenter-btn"),m=document.querySelector(".clear-btn"),v=document.querySelector(".balance-btn"),p=document.querySelector(".level-order-btn"),O=document.querySelector(".inorder-btn"),S=document.querySelector(".preorder-btn"),T=document.querySelector(".postorder-btn");function A(e){t.indexOf(e.key)<0&&t.push(e.key)}function y(e){t=t.filter((t=>t!==e.key))}function b(t){if(""===r.value)return void alert("Please enter the elements to create tree with");const s=r.value.split(" ").map((t=>Number(t))).filter((t=>NaN!==t));r.value="",s.length<e.constants.MAX_NODES&&h.buildTree(s)}function N(t){if(""===o.value)return void alert("Please enter an element to insert");const e=Number(o.value);NaN!==e?(o.value="",h.insertNumber(e)):alert("Enter a valid number")}function w(t){if(""===c.value)return void alert("Please enter an element to insert");const e=Number(c.value);NaN!==e?(c.value="",h.findNumber(e)):alert("Enter a valid number")}function E(t){if(""===u.value)return void alert("Please enter an element to delete");const e=Number(u.value);NaN!==e?(u.value="",h.deleteNumber(e)):alert("Enter a valid number")}function _(t){if(""===f.value)return void alert("Please enter the number of elements to create random tree");let s=Number(f.value);if(s>e.constants.MAX_NODES)return f.value=e.constants.MAX_NODES,void alert("Max number of nodes is "+e.constants.MAX_NODES);f.value="",h.createRandom(s)}function D(t){h.clear()}function X(t){h.balance()}function R(t){h.traverse(t.currentTarget.dataset.type)}function P(t){h.isAnimating()&&h.skipAnimation()}function B(t){h.recenter()}function k(t){h.isAnimating()&&(alert("Please wait for animation to end or skip the animation by clicking on the canvas"),t.stopPropagation())}return{isKeyPressed:function(e){return t.indexOf(e)>=0},listen:function(){window.addEventListener("keydown",A),window.addEventListener("keyup",y),s.addEventListener("click",P),i.addEventListener("click",k,!0),n.addEventListener("click",b),g.addEventListener("click",_),a.addEventListener("click",N),d.addEventListener("click",w),l.addEventListener("click",E),x.addEventListener("click",B),m.addEventListener("click",D),v.addEventListener("click",X),O.addEventListener("click",R),p.addEventListener("click",R),S.addEventListener("click",R),T.addEventListener("click",R)}}})();var r=s(162);const a=class{constructor(t,e){this.targetX=e.width/2,this.targetY=e.height/2,this.lastTargetX=this.targetX,this.lastTargetY=this.targetY,this.hasMoved=!1,this.on=!1,this.updateSettings(t,e),this.calibrate()}updateSettings(t,s){this.worldBounds=t,this.canvas=s,this.on=this.worldBounds.minX<-e.constants.WORLD_PADDING||this.worldBounds.maxX>this.canvas.width+e.constants.WORLD_PADDING||this.worldBounds.minY<-e.constants.WORLD_PADDING||this.worldBounds.maxY>this.canvas.width+e.constants.WORLD_PADDING,this.speedX=.01*t.maxX,this.speedY=.01*t.maxY}calibrate(){this.x=(0,r.clamp)(this.targetX-this.canvas.width/2,this.worldBounds.minX,this.worldBounds.maxX-this.canvas.width),this.y=(0,r.clamp)(this.targetY-this.canvas.height/2,this.worldBounds.minY,this.worldBounds.maxY-this.canvas.height)}update(){n.isKeyPressed("ArrowRight")&&(this.targetX+=this.speedX),n.isKeyPressed("ArrowLeft")&&(this.targetX-=this.speedX),n.isKeyPressed("ArrowUp")&&(this.targetY-=this.speedY),n.isKeyPressed("ArrowDown")&&(this.targetY+=this.speedY),this.targetX-this.canvas.width/2<this.worldBounds.minX?this.targetX=this.worldBounds.minX+this.canvas.width/2:this.targetX+this.canvas.width/2>this.worldBounds.maxX&&(this.targetX=this.worldBounds.maxX-this.canvas.width/2),this.targetY-this.canvas.height/2<0?this.targetY=this.canvas.height/2:this.targetY+this.canvas.height/2>this.worldBounds.maxY&&(this.targetY=this.worldBounds.maxY-this.canvas.height/2),this.hasMoved=this.targetX!=this.lastTargetX||this.targetY!=this.lastTargetY,this.lastTargetX=this.targetX,this.lastTargetY=this.targetY,this.calibrate()}move(t){t.translate(-this.x,-this.y)}reset(t){t.setTransform(1,0,0,1,0,0)}center(){this.targetX=this.canvas.width/2,this.targetY=this.canvas.height/2}};const o=class{constructor(t){this.canvas=document.querySelector("#canvas"),this.canvas.width=e.constants.CANVAS_WIDTH,this.canvas.height=e.constants.CANVAS_HEIGHT,this.ctx=this.canvas.getContext("2d"),this.worldBounds={},this.updated=!1,this.camera=new a(this.worldBounds,this.canvas),this.fps=e.constants.FPS,this.fpsInterval=1e3/this.fps,this.then=Date.now(),this.elapsed=null}updateWorldBounds(t){if((0,r.isObjectEmpty)(t))return;const s=t.boundingBox;this.worldBounds.minX=Math.min(0,s.x+this.canvas.width/2-t.rootPosition.x),this.worldBounds.maxX=Math.max(this.canvas.width,s.w+this.canvas.width/2-t.rootPosition.x),this.worldBounds.minY=0,this.worldBounds.maxY=Math.max(this.canvas.height,s.h+this.canvas.height/2),this.worldBounds.minX-=e.constants.WORLD_PADDING,this.worldBounds.maxX+=e.constants.WORLD_PADDING,this.worldBounds.maxY+=e.constants.WORLD_PADDING,this.camera.updateSettings(this.worldBounds,this.canvas)}clearCanvas(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle=e.constants.CANVAS_COLOR,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}renderNode(t){let s;t.highlighted&&(s="blue"),t.deleted&&(s="red"),this.ctx.fillStyle=s||e.constants.NODE_COLOR,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,e.constants.NODE_RADIUS,0,e.constants.MAX_RADIAN),this.ctx.fill(),this.ctx.lineWidth=2.5,this.ctx.strokeStyle=e.constants.BORDER_COLOR,this.ctx.stroke(),this.ctx.font=e.constants.DATA_FONT,this.ctx.fillStyle=e.constants.DATA_COLOR,this.ctx.textAlign="center",this.ctx.fillText(t.data,t.x,t.y+e.constants.TEXT_OFFSET)}renderEdge(t){this.ctx.lineWidth=2.5,this.ctx.strokeStyle=e.constants.BORDER_COLOR,this.ctx.beginPath(),this.ctx.moveTo(t.x1,t.y1),this.ctx.lineTo(t.x2,t.y2),this.ctx.stroke()}renderTree(t){const s=t.positions.nodes;t.positions.edges.forEach((s=>{const i=Object.assign({},s);i.x1=i.x1+this.canvas.width/2-t.rootPosition.x,i.y1=i.y1+e.constants.OFFSET_Y,i.x2=i.x2+this.canvas.width/2-t.rootPosition.x,i.y2=i.y2+e.constants.OFFSET_Y,this.renderEdge(i)})),s.forEach((s=>{const i=Object.assign({},s);i.x=i.x+this.canvas.width/2-t.rootPosition.x,i.y=i.y+e.constants.OFFSET_Y,this.renderNode(i)}))}renderStats(t){this.ctx.font=e.constants.STAT_FONT,this.ctx.fillStyle=e.constants.STAT_COLOR,this.ctx.textAlign="left",this.ctx.fillText("Number of elements: "+t.state.length,e.constants.STAT_X,e.constants.OFFSET_Y),this.ctx.fillText("Height: "+t.state.height,e.constants.STAT_X,e.constants.OFFSET_Y+20),this.ctx.fillText("Balanced: "+t.state.balanced,e.constants.STAT_X,e.constants.OFFSET_Y+40),t.node&&(this.ctx.fillStyle="rgb(0,255,0)",this.ctx.fillText("Found Node: "+t.node.data,e.constants.STAT_X,e.constants.OFFSET_Y+60),this.ctx.fillText("Node Height: "+t.node.height,e.constants.STAT_X,e.constants.OFFSET_Y+80),this.ctx.fillText("Node Depth: "+t.node.depth,e.constants.STAT_X,e.constants.OFFSET_Y+100)),h.isAnimating()&&(this.ctx.fillStyle=e.constants.STAT_COLOR,this.ctx.textAlign="center",this.ctx.fillText("Click anywhere in the canvas to skip the animation",this.canvas.width/2,this.canvas.height-10))}centerCamera(){this.camera.center()}render(t){(0,r.isObjectEmpty)(t.state)?this.clearCanvas():this.updated&&(this.clearCanvas(),this.camera.on?(void 0!==t.targetPos&&void 0!==t.targetPos.x&&void 0!==t.targetPos.y&&(t.targetPos.x=t.targetPos.x+this.canvas.width/2-t.state.rootPosition.x,t.targetPos.y=t.targetPos.y+e.constants.OFFSET_Y,this.camera.targetX=t.targetPos.x,this.camera.targetY=t.targetPos.y),this.camera.update(),this.camera.move(this.ctx),this.renderTree(t.state),this.camera.reset(this.ctx)):this.renderTree(t.state),this.updated=!1,this.renderStats(t))}},h=(()=>{let t=null,s=null,a=null,h=null,d=null,c=!1,l=null;function u(t={}){h.updated=!0,h.updateWorldBounds(a),h.render({state:a,targetPos:t.targetPos,node:t.node})}function g(){s=Object.assign({},t.state)}async function f(e){if(c=!0,a=s,await function(e){return new Promise(((i,n)=>{l=i,d=setInterval((()=>{if(0===t.recordStack.length||(0,r.isObjectEmpty)(s))return void i();const n=t.recordStack.shift(),a=s.positions.nodes.find((t=>t.data===n));a.highlighted=!0,a.data===e&&(a.highlighted=!1,a.deleted=!0),u({targetPos:{x:a.x,y:a.y}})}),500)}))}(e),clearInterval(d),t.recordStack.length&&!(0,r.isObjectEmpty)(s)){const e=t.recordStack.pop(),i=s.positions.nodes.find((t=>t.data===e));u({x:i.x,y:i.y}),t.clearRecords()}c=!1,a=t.state,u()}function x(e){t.build(e),u()}function m(){h.centerCamera(),u()}return{init:function(){t=new i,a=t.state,h=new o,n.listen(),u()},start:function t(){requestAnimationFrame(t),c||(h.camera.update(),(n.isKeyPressed("ArrowRight")||n.isKeyPressed("ArrowLeft")||n.isKeyPressed("ArrowUp")||n.isKeyPressed("ArrowDown"))&&h.camera.hasMoved&&u())},buildTree:x,isAnimating:function(){return c},skipAnimation:function(){l()},insertNumber:function(s){t.length>=e.constants.MAX_NODES?alert("Reached Max number of nodes: "+e.constants.MAX_NODES):(g(),t.insert(s),f())},findNumber:async function(e){g();const s=t.find(e);if(null===s)return void alert("That number does not exist in the tree!");const i={};i.data=s.data,i.height=t.height(s),i.depth=t.depth(s),await f(),u({node:i})},deleteNumber:function(e){if(null===t.find(e))return alert("That number does not exist in the tree!"),void t.clearRecords();g(),t.delete(e),f(e)},createRandom:function(t){const s=[];for(let i=0;i<t;++i){let t=(0,r.getRandom)(e.constants.MAX_N);for(;s.includes(t);)t=(0,r.getRandom)(e.constants.MAX_N);s.push(t)}x(s)},clear:function(){t.clear(),a=t.state,g(),m()},balance:function(){t.rebalance(),u()},traverse:async function(e){t.root?(g(),t.recordTraversal(e),await f(),m()):alert("There is no tree to traverse, please create a tree or insert element.")},recenter:m}})();h.init(),h.start()})()})();